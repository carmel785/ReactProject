{"ast":null,"code":"var _jsxFileName = \"/Users/carmelklein/GitProjects/ReactProject/src/Todos.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Todos extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      add: false,\n      newTodoTitle: \"\"\n    };\n  }\n\n  checkIdClicked() {\n    if (this.props.data.userId !== \"\") {\n      return true;\n    }\n  } //if the user clicked on Mark completed Button\n\n\n  change(indexPass) {\n    this.props.data.todos.forEach((item, index) => {\n      if (index === indexPass) {\n        item.completed = true;\n        this.forceUpdate(); // rerendering\n      }\n    });\n  }\n\n  addTodo() {\n    let newTodo = {\n      userId: this.props.data.userId,\n      Title: this.state.newTodoTitle,\n      completed: false\n    };\n    axios.post(\"https://jsonplaceholder.typicode.com/todos\", newTodo).then(resp => console.log(resp));\n  }\n\n  render() {\n    let items = this.props.data.todos.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-Border-TodosAndPosts-Inner\",\n        children: [\"Title: \", item.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 31\n        }, this), \"Completed: \", item.completed.toString(), item.completed ? '' : /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => this.change(index),\n          children: \"Mark Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 99\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this);\n    });\n    let checkClicked = this.checkIdClicked();\n    console.log(sessionStorage[\"addClicked\"]);\n\n    if (sessionStorage[\"addClicked\"] === \"false\") {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-Border-TodosAndPosts\",\n        children: checkClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Todos - User \", this.props.data.userId, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"button\",\n            value: \"Add\",\n            onClick: () => this.setState({\n              add: true\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 51\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 134\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-Border-TodosAndPosts-Inner\",\n            children: [this.state.add ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App-Border-TodosAndPosts-Inner\",\n              children: [\"Title: \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                onChange: e => this.setState({\n                  newTodoTitle: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 20\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 107\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.setState({\n                  add: false\n                }),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => this.addTodo(),\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 31\n            }, this) : items, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 31\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 27\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this);\n    }\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state\n  };\n};\n\nexport default connect(mapStateToProps)(Todos);","map":{"version":3,"sources":["/Users/carmelklein/GitProjects/ReactProject/src/Todos.js"],"names":["React","Component","connect","axios","Todos","constructor","props","state","add","newTodoTitle","checkIdClicked","data","userId","change","indexPass","todos","forEach","item","index","completed","forceUpdate","addTodo","newTodo","Title","post","then","resp","console","log","render","items","map","title","toString","checkClicked","sessionStorage","setState","e","target","value","mapStateToProps"],"mappings":"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","sourcesContent":["import './App.css';\nimport React,{Component} from 'react' \nimport {connect} from 'react-redux'\nimport axios from 'axios'\nclass Todos extends Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {add: false, newTodoTitle: \"\"}\n  }\n\n  checkIdClicked()\n  {\n    if(this.props.data.userId !== \"\" )\n    {\n      return true\n    }\n  }\n\n    //if the user clicked on Mark completed Button\n    change(indexPass)\n    {\n      this.props.data.todos.forEach((item,index)=>\n        {\n          if(index === indexPass)\n          {\n            item.completed = true\n            this.forceUpdate() // rerendering\n          }\n        })\n    }\n\n    addTodo()\n    {\n      let newTodo = {\n        userId: this.props.data.userId,\n        Title: this.state.newTodoTitle,\n        completed: false\n      }\n\n      axios.post(\"https://jsonplaceholder.typicode.com/todos\", newTodo)\n      .then(resp=> console.log(resp))\n    }\n\n\n  render()\n  {\n    \n    let items = this.props.data.todos.map((item,index)=>\n    {\n      return  <div key = {index} className = \"App-Border-TodosAndPosts-Inner\">\n      Title: {item.title}<br/><br/>\n      Completed: {item.completed.toString()}\n      {item.completed ? '' : <button onClick = {() => this.change(index)}>Mark Completed</button>}<br/>\n    </div>\n    })\n\n    let checkClicked = this.checkIdClicked()\n\n    console.log(sessionStorage[\"addClicked\"])\n    if(sessionStorage[\"addClicked\"] === \"false\")\n      {\n        return(\n          <div className = \"App-Border-TodosAndPosts\">\n          {checkClicked ? <div>\n            Todos - User {this.props.data.userId} <input type = \"button\" value = \"Add\" onClick = {() => this.setState({add: true})}/><br/>\n            <div className = \"App-Border-TodosAndPosts-Inner\">\n            {this.state.add ? <div className = \"App-Border-TodosAndPosts-Inner\"> \n            Title: <input type = \"text\" onChange = {(e)=> this.setState({newTodoTitle: e.target.value})}/><br/>\n            <button onClick = {() => this.setState({add: false})}>Cancel</button>\n            <button onClick = {()=> this.addTodo()}>Add</button>\n              </div> : items} <br/>\n            </div>\n    \n            </div>\n             : \"\"}\n          \n           \n    \n          </div>\n          \n        )\n      }\n  }\n}\n\nconst mapStateToProps = (state) =>\n{\n  return {\n    data: state\n  }\n}\n\nexport default connect(mapStateToProps)(Todos);"]},"metadata":{},"sourceType":"module"}