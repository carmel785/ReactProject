{"ast":null,"code":"var _jsxFileName = \"/Users/carmelklein/GitProjects/ReactProject/src/Users.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport User from './User';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Users extends Component {\n  constructor() {\n    super();\n    this.state = {\n      users: [],\n      todos: []\n    };\n  }\n\n  async componentDidMount() {\n    // your source code to load initial data\n    var users = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({\n      users: users.data\n    });\n    var todos = await axios.get(\"https://jsonplaceholder.typicode.com/todos\");\n    this.setState({\n      todos: todos.data\n    });\n    todos.forEach(t => {\n      if (t.userId === 1) {\n        console.log(t);\n      }\n    });\n    console.log(todos);\n  }\n\n  render() {\n    let itemsU = this.state.users.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(User, {\n        allUsers: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 14\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-Border\",\n      children: [\"Search \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"button\",\n        value: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), itemsU]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Users;","map":{"version":3,"sources":["/Users/carmelklein/GitProjects/ReactProject/src/Users.js"],"names":["React","Component","axios","User","Users","constructor","state","users","todos","componentDidMount","get","setState","data","forEach","t","userId","console","log","render","itemsU","map","item","index"],"mappings":";AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;;AACA,MAAMC,KAAN,SAAoBH,SAApB,CACA;AACEI,EAAAA,WAAW,GACX;AACE;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,KAAK,EAAE,EAAR;AAAYC,MAAAA,KAAK,EAAE;AAAnB,KAAb;AACD;;AAEsB,QAAjBC,iBAAiB,GAAG;AACxB;AACA,QAAIF,KAAK,GAAG,MAAML,KAAK,CAACQ,GAAN,CAAU,4CAAV,CAAlB;AACA,SAAKC,QAAL,CAAc;AAACJ,MAAAA,KAAK,EAAEA,KAAK,CAACK;AAAd,KAAd;AAEA,QAAIJ,KAAK,GAAG,MAAMN,KAAK,CAACQ,GAAN,CAAU,4CAAV,CAAlB;AACA,SAAKC,QAAL,CAAc;AAACH,MAAAA,KAAK,EAAEA,KAAK,CAACI;AAAd,KAAd;AAEAJ,IAAAA,KAAK,CAACK,OAAN,CAAcC,CAAC,IACb;AACE,UAAGA,CAAC,CAACC,MAAF,KAAa,CAAhB,EACA;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACD;AACF,KANH;AAOAE,IAAAA,OAAO,CAACC,GAAR,CAAYT,KAAZ;AACH;;AAECU,EAAAA,MAAM,GACN;AACE,QAAIC,MAAM,GAAG,KAAKb,KAAL,CAAWC,KAAX,CAAiBa,GAAjB,CAAqB,CAACC,IAAD,EAAMC,KAAN,KAClC;AACE,0BAAO,QAAC,IAAD;AAAoB,QAAA,QAAQ,EAAID;AAAhC,SAAaC,KAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAHY,CAAb;AAMA,wBACE;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA,yCACS;AAAO,QAAA,IAAI,EAAG;AAAd;AAAA;AAAA;AAAA;AAAA,cADT,eAEE;AAAO,QAAA,IAAI,EAAG,QAAd;AAAuB,QAAA,KAAK,EAAE;AAA9B;AAAA;AAAA;AAAA;AAAA,cAFF,EAGGH,MAHH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAQD;;AAzCH;;AA4CA,eAAef,KAAf","sourcesContent":["import './App.css';\nimport React,{Component} from 'react' \nimport axios from 'axios'\nimport User from './User'\nclass Users extends Component\n{\n  constructor()\n  {\n    super()\n    this.state = {users: [], todos: []}\n  }\n\n  async componentDidMount() {\n    // your source code to load initial data\n    var users = await axios.get(\"https://jsonplaceholder.typicode.com/users\")\n    this.setState({users: users.data})\n\n    var todos = await axios.get(\"https://jsonplaceholder.typicode.com/todos\")\n    this.setState({todos: todos.data})\n    \n    todos.forEach(t=>\n      {\n        if(t.userId === 1)\n        {\n          console.log(t)\n        }\n      })\n    console.log(todos)\n}\n\n  render()\n  {\n    let itemsU = this.state.users.map((item,index)=>\n    {\n      return <User key = {index} allUsers = {item}/>\n    })\n    \n    \n    return(\n      <div className = \"App-Border\">\n        Search <input type = \"text\" />\n        <input type = \"button\" value= \"Add\"/>\n        {itemsU}\n      </div>\n      \n    )\n  }\n}\n\nexport default Users;"]},"metadata":{},"sourceType":"module"}