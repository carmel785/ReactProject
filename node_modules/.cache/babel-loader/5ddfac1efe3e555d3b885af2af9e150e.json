{"ast":null,"code":"var _jsxFileName = \"/Users/carmelklein/GitProjects/ReactProject/src/Posts.js\";\nimport './App.css';\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Posts extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      add: false,\n      newTitle: \"\",\n      newBody: \"\"\n    };\n  }\n\n  checkIdClicked() {\n    if (this.props.data.userId !== \"\" && this.props.data.addClicked === false) {\n      return true;\n    }\n  }\n\n  addPost() {\n    let newPost = {\n      Title: this.state.newTitle,\n      Body: this.state.newBody\n    };\n    axios.post(\"https://jsonplaceholder.typicode.com/posts\", newPost).then(resp => console.log(resp));\n  }\n\n  render() {\n    let items = this.props.data.posts.map((item, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-Border-TodosAndPosts-Inner\",\n        children: [\"Title: \", item.title, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 31\n        }, this), \"Body: \", item.body, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 24\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 15\n      }, this);\n    }); // let checkClicked = this.checkIdClicked()\n\n    console.log(this.props.data.addClicked);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-Border-TodosAndPosts\",\n      children: this.props.data.addClicked ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Posts - User \", this.props.data.userId, \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"button\",\n          value: \"Add\",\n          onClick: () => this.setState({\n            add: true\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 47\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 130\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"App-Border-TodosAndPosts-Inner\",\n          children: [this.state.add ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-Border-TodosAndPosts-Inner\",\n            children: [\"Title: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => this.setState({\n                newTitle: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 16\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 99\n            }, this), \"Body: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              onChange: e => this.setState({\n                newBody: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 97\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.setState({\n                add: false\n              }),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => this.addPost(),\n              children: \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 27\n          }, this) : items, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this) : \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state\n  };\n};\n\nexport default connect(mapStateToProps)(Posts);","map":{"version":3,"sources":["/Users/carmelklein/GitProjects/ReactProject/src/Posts.js"],"names":["React","Component","connect","axios","Posts","constructor","props","state","add","newTitle","newBody","checkIdClicked","data","userId","addClicked","addPost","newPost","Title","Body","post","then","resp","console","log","render","items","posts","map","item","index","title","body","setState","e","target","value","mapStateToProps"],"mappings":"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","sourcesContent":["import './App.css';\nimport React,{Component} from 'react' \nimport {connect} from 'react-redux'\nimport axios from 'axios'\n\nclass Posts extends Component\n{\n  constructor(props)\n  {\n    super(props)\n    this.state = {add: false, newTitle: \"\", newBody: \"\"}\n  }\n\n  checkIdClicked()\n    {\n      if(this.props.data.userId !== \"\" && this.props.data.addClicked === false)\n      {\n        return true\n      }\n    }\n\n    addPost()\n    {\n      let newPost = {\n        Title: this.state.newTitle,\n        Body: this.state.newBody\n      }\n\n      axios.post(\"https://jsonplaceholder.typicode.com/posts\", newPost)\n      .then(resp=> console.log(resp))\n    }\n\n\n  render()\n  {\n    let items = this.props.data.posts.map((item,index)=>\n    {\n      return  <div key = {index} className = \"App-Border-TodosAndPosts-Inner\">\n      Title: {item.title}<br/><br/>\n      Body: {item.body}<br/>\n    </div>\n\n    })\n\n    // let checkClicked = this.checkIdClicked()\n    console.log(this.props.data.addClicked)\n    return(\n      \n      <div className = \"App-Border-TodosAndPosts\">\n      {this.props.data.addClicked ?\n      <div>\n        Posts - User {this.props.data.userId} <input type = \"button\" value = \"Add\" onClick = {() => this.setState({add: true})}/><br/>\n        <div className = \"App-Border-TodosAndPosts-Inner\">\n        {this.state.add ? <div className = \"App-Border-TodosAndPosts-Inner\"> \n        Title: <input type = \"text\" onChange = {(e)=> this.setState({newTitle: e.target.value})}/><br/>\n        Body: <input type = \"text\" onChange = {(e)=> this.setState({newBody: e.target.value})}/><br/>\n        <button onClick = {() => this.setState({add: false})}>Cancel</button>\n        <button onClick = {()=> this.addPost()}>Add</button>\n          </div> : items} <br/>\n        </div>\n      </div>: \"\"}\n      \n      </div>\n      \n    )\n  }\n}\nconst mapStateToProps = (state) =>\n{\n  return {\n    data: state\n  }\n}\n\nexport default connect(mapStateToProps)(Posts);"]},"metadata":{},"sourceType":"module"}